{"version":3,"sources":["lastnamesplit.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MultiLastNameSplit","splitStr","_classCallCheck","this","otherSplits","_step","splitted2","split","map","s","toUpperCase","trim","replaceAll","_iterator","_createForOfIteratorHelper","n","done","individualSplit","value","newSplit","match","DoubleLastNameSplit","console","log","SingleLastNameSplit","push","err","e","f","_createClass","key","lastName","length","every","item","isInSplit","NoLastNameSplit","startingString","startsWith","start","end","splitString","Error","lastNameUpper","substring","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","o","allowArrayLike","it","Array","isArray","minLen","_arrayLikeToArray","toString","from","test","_unsupportedIterableToArray","F","_e","normalCompletion","didErr","step","_e2","arr","len","arr2","searchExamTimings","eTimes","decision","courseCode","course","section","et","ExamTimingComponent","props","timingInfo","examTiming","React","createElement","date","location","ExamDecisionWrapper","decisions","decisionList","displayCourses","allData","examTimes","sort","a","b","concat","BasicSelect","_React$useState","useState","_React$useState2","_slicedToArray","age","setAge","Box","sx","color","minWidth","FormControl","fullWidth","InputLabel","id","Select","labelId","label","onChange","event","target","onSessionUpdate","MenuItem","MyTable","_useState9","_useState10","data","setData","handleChange","index","newData","_toConsumableArray","onDataUpdate","row","onClick","splice","handleRemoveRow","App","_useState","_useState2","setLastName","_useState3","_useState4","examRequestData","setExamRequestData","_useState5","_useState6","decisionInput","setDecisionInput","useEffect","_fetchData","_asyncToGenerator","_callee","response","responseJson","_context","fetch","json","apply","arguments","fetchData","_useState7","_useState8","className","style","backgroundColor","padding","borderRadius","ses","_fetchSession","_callee2","session","_context2","_x","fetchSession","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.b0f0ceb5.chunk.js","sourcesContent":["export interface LastNameSplit {\r\n    /**\r\n     * Returns true if lastName is in this particular split.\r\n     * @param lastName\r\n     */\r\n    isInSplit(lastName: string): boolean;\r\n}\r\n\r\n/**\r\n * Creates a LastNameSplit objected based on\r\n * a split string that can be found on the\r\n * exam timetable.\r\n * @param splitStr the input split string\r\n */\r\nexport function createSplit(splitStr: string): LastNameSplit {\r\n    let toReturn: LastNameSplit;\r\n    splitStr = splitStr.trim().replaceAll(\" \", \"\").toUpperCase();\r\n    if (splitStr.match(/^[A-Z]+-[A-Z]+$/)) {\r\n        toReturn = new DoubleLastNameSplit(splitStr);\r\n    } else if (splitStr.match(/^[A-Z]+$/)) {\r\n        toReturn = new SingleLastNameSplit(splitStr);\r\n    } else if (splitStr.match(/,/)) {\r\n        toReturn = new MultiLastNameSplit(splitStr);\r\n    } else {\r\n        toReturn = new NoLastNameSplit();\r\n    }\r\n    return toReturn;\r\n}\r\n\r\nclass MultiLastNameSplit implements LastNameSplit {\r\n    otherSplits: LastNameSplit[];\r\n\r\n    constructor(splitStr: string) {\r\n        this.otherSplits = [];\r\n        let splitted2 = splitStr.split(',')\r\n            .map(s => s.toUpperCase().trim().replaceAll(\" \", \"\"));\r\n        for (let individualSplit of splitted2) {\r\n            let newSplit: LastNameSplit;\r\n            if (individualSplit.match(/^[A-Z]+-[A-Z]+$/)) {\r\n                newSplit = new DoubleLastNameSplit(individualSplit);\r\n            } else if (individualSplit.match(/^[A-Z]+$/)) {\r\n                newSplit = new SingleLastNameSplit(individualSplit);\r\n            } else {\r\n                console.log(\"Split item created nothing\", individualSplit, splitted2);\r\n                continue;\r\n            }\r\n            this.otherSplits.push(newSplit);\r\n        }\r\n    }\r\n\r\n    isInSplit(lastName: string): boolean {\r\n        if (this.otherSplits.length === 0)\r\n            return false;\r\n        else {\r\n            return this.otherSplits.every((item) => item.isInSplit(lastName));\r\n        }\r\n    }\r\n}\r\n\r\nclass NoLastNameSplit\r\n    implements LastNameSplit {\r\n    isInSplit(lastName: string): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nclass SingleLastNameSplit implements LastNameSplit {\r\n    private readonly startingString;\r\n\r\n    /**\r\n     * @param splitStr must match the regex ^[A-Z]+\r\n     */\r\n    constructor(splitStr: string) {\r\n        this.startingString = splitStr.split(\"-\")[0].toUpperCase();\r\n    }\r\n\r\n    isInSplit(lastName: string): boolean {\r\n        return lastName.toUpperCase().startsWith(this.startingString);\r\n    }\r\n}\r\n\r\nclass DoubleLastNameSplit implements LastNameSplit {\r\n    private readonly start;\r\n    private readonly end;\r\n\r\n    /**\r\n     * @param splitStr must match the regex ^[A-Z]+\r\n     */\r\n    constructor(splitStr: string) {\r\n        const splitString = splitStr.toUpperCase().split(\"-\");\r\n        if (splitString.length !== 2) {\r\n            throw Error(\"Double last name split isn't actually a double last name split\");\r\n        }\r\n        this.start = splitString[0];\r\n        this.end = splitString[1];\r\n    }\r\n\r\n    isInSplit(lastName: string): boolean {\r\n        const lastNameUpper = lastName.toUpperCase();\r\n        return this.start <= lastNameUpper.substring(this.start.length)\r\n            && lastNameUpper.substring(this.end.length) <= this.end;\r\n    }\r\n}","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport {ExamRequest, ExamTiming} from \"./interfaces\";\nimport {createSplit} from \"./lastnamesplit\";\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, {SelectChangeEvent} from '@mui/material/Select';\n\n\ntype Decision = {\n    course: string;\n    section: string;  // blank if all / not stated\n}\n\ntype PropsToExamDecisionWrapper = {\n    decisionList: Decision[];\n    lastName: string;\n    allData: ExamRequest;\n}\n\n\n/**\n * Returns the exam timing object, or null if it doesn't exist.\n * @param eTimes the list of all possible exam timings\n * @param decision contains the course and section code\n * @param lastName the last name of the user\n */\nfunction searchExamTimings(eTimes: ExamTiming[], decision: Decision, lastName: string): ExamTiming | null {\n    const courseCode = decision.course;\n    const section = decision.section;\n    for (let et of eTimes) {\n        if (courseCode !== et.course) continue;\n        console.log(et.course);\n        if (et.section !== \"ALL\" && section !== et.section) continue;\n        // last name split detector\n        const split = createSplit(et.split);\n        if (split.isInSplit(lastName)) {\n            return et;\n        }\n    }\n    return null;\n}\n\n\ntype SingleTiming = {\n    examTiming: ExamTiming;\n}\n\n\nfunction ExamTimingComponent(props: SingleTiming) {\n    const timingInfo = props.examTiming;\n    return (\n        <div>\n            {timingInfo.course} | {timingInfo.date} | {timingInfo.start}-{timingInfo.end} | {timingInfo.location}\n        </div>\n    )\n}\n\n\nfunction ExamDecisionWrapper(props: PropsToExamDecisionWrapper) {\n    const decisions = props.decisionList;\n    const displayCourses: ExamTiming[] = [];\n    for (let i = 0; i < decisions.length; i++) {\n        const decision = decisions[i];\n        const result = searchExamTimings(props.allData.examTimes, decision, props.lastName);\n        if (result !== null) {\n            displayCourses.push(result);\n        }\n    }\n    displayCourses.sort((a, b) => {\n        if(a.date < b.date) return -1;\n        if(a.date > b.date) return 1;\n        return 0;\n\n    });\n    console.log(\"Display courses\", displayCourses)\n    return (\n        <div>\n            <div>\n                {displayCourses.map((et) => <ExamTimingComponent key={`${et.course}-${et.location}`} examTiming={et}/>)}\n            </div>\n        </div>\n    )\n}\n\n\n\nfunction App() {\n\n    const [lastName, setLastName] = useState('');\n    const [examRequestData, setExamRequestData] = useState<ExamRequest | null>(null);\n    const [decisionInput, setDecisionInput] = useState<Decision[]>([]);\n\n\n    useEffect(() => {\n        async function fetchData() {\n            const response = await fetch(\"/exams_20231.json\");\n            const responseJson = await response.json();\n            setExamRequestData(responseJson);\n        }\n\n        fetchData().then(() => console.log(\"Fetched\", examRequestData));\n    }, []);\n\n    const [counter, setCounter] = useState(0);\n    let tempVar = \"Among us\";\n\n    function handleDataUpdate(data: Decision[]) {\n        console.log('Table data updated:', data);\n        setDecisionInput(data);\n    }\n\n    const whiteBG = {\n        backgroundColor: 'white',\n        padding: '6px',\n        borderRadius: '5px'\n    }\n\n\n\n\n\n    const handleNameChange = (event: { target: { value: React.SetStateAction<string>; }; }) => {\n        setLastName(event.target.value);\n    };\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n\n                    <h1>UofT Exam Timetable Generator</h1>\n                    <div style={whiteBG}>\n                        <BasicSelect onSessionUpdate={(ses) => {\n                            async function fetchSession(session: string) {\n                                const response = await fetch(`/exams_${session}.json`);\n                                const responseJson = await response.json();\n                                setExamRequestData(responseJson);\n                            }\n\n                            fetchSession(ses).then(() => console.log(\"Fetched session\", ses));\n                        }\n                        }/></div>\n\n                    <div>\n                        <label>\n                            <div>\n                                Your surname:\n                            </div>\n                            <input type=\"text\" onChange={handleNameChange}/>\n                        </label>\n\n                    </div>\n\n                    <MyTable onDataUpdate={handleDataUpdate}/>\n                    {/*<button onClick={() => setCounter(counter + 1)}>Click me</button>*/}\n                    {examRequestData ?\n                        (<ExamDecisionWrapper decisionList={decisionInput} lastName={lastName}\n                                              allData={examRequestData}\n                        />) : null\n                    }\n                    <div className=\"Small-width\">\n                        <p> Enter the course in COURSE and section in SECTION.\n                        </p>\n                        <p>You must type the FULL course code, including the campus number and section. For example, CSC108<strong>H1F</strong>.</p>\n                        <p>You only need the section if the course splits exams on sections, which is rare.</p>\n                        <p>Online exams will not display. If your last name is not in any split, the course will not show.</p>\n                        <p>Your surname is not case sensitive.</p>\n\n\n                    </div>\n\n            </header>\n        </div>\n    );\n}\n\n\ntype OnSelectUpdate = {\n    onSessionUpdate: (ses: string) => void;\n}\n\n\n// the session selector\nfunction BasicSelect(props: OnSelectUpdate) {\n    const [age, setAge] = React.useState('20231');\n\n    const handleChange = (event: SelectChangeEvent) => {\n\n        setAge(event.target.value);\n        props.onSessionUpdate(event.target.value);\n    };\n\n    return (\n        <Box sx={{color: 'white', minWidth: 120}}>\n            <FormControl fullWidth>\n                <InputLabel id=\"demo-simple-select-label\">Session</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={age}\n                    label=\"Age\"\n                    onChange={handleChange}\n                >\n                    <MenuItem value={20231}>Winter 2023</MenuItem>\n                    <MenuItem value={20229}>Fall 2022</MenuItem>\n                </Select>\n            </FormControl>\n        </Box>\n    );\n}\n\n\n// chaos start\n\n\ntype MyTableProps = {\n    onDataUpdate: (data: Decision[]) => void;\n};\n\nfunction MyTable(props: MyTableProps) {\n    const [data, setData] = useState<Decision[]>([{course: '', section: ''}]);\n\n    function handleAddRow() {\n        const newData = [...data, {course: '', section: ''}];\n        setData(newData);\n        props.onDataUpdate(newData);\n    }\n\n    function handleRemoveRow(index: number) {\n        const newData = [...data];\n        newData.splice(index, 1);\n        setData(newData);\n        props.onDataUpdate(newData);\n    }\n\n    function handleChange(event: React.ChangeEvent<HTMLInputElement>, index: number, key: keyof Decision) {\n        const newData = [...data];\n        newData[index][key] = event.target.value.toUpperCase();\n        setData(newData);\n        props.onDataUpdate(newData);\n    }\n\n    return (\n        <div>\n            <table>\n                <thead>\n                <tr>\n                    <th>Course</th>\n                    <th>Section</th>\n                    <th>Action</th>\n                </tr>\n                </thead>\n                <tbody>\n                {data.map((row, index) => (\n                    <tr key={index}>\n                        <td>\n                            <input\n                                type=\"text\"\n                                value={row.course}\n                                onChange={(event) => handleChange(event, index, 'course')}\n                            />\n                        </td>\n                        <td>\n                            <input\n                                type=\"text\"\n                                value={row.section}\n                                onChange={(event) => handleChange(event, index, 'section')}\n                            />\n                        </td>\n                        <td>\n                            <button onClick={() => handleRemoveRow(index)}>X</button>\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n            <button onClick={handleAddRow}>Add Row</button>\n        </div>\n    );\n}\n\nexport default App;\n\n\n\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}